q1 Python 
- high level , interpreted , general.
- easy to read , simple , hence improves readabilty
- supports module , threads , exception handling , automatic memory management.
- contains high level data structures and is dynamically typed

----------------------------------------------------------------------

q2. Dynamic typed

- means you dont need to declare the data type
- data types are checked at run time 
- a = 5
--------------------------------------------------------------------
q3 static typed
- you have to declare the data type before variable
- int a = 5;

----------------------------------------------------------------------
q4 typing
- it refers to type checking. 
- in strong typed language ex python 1 + '2' will result in error.
- in weakly types langauge such as javascript will simply output '12'
- type checking can be done at two stages ie static and dynamic
- static - data types are checked before execution
- dynamic - data types are checked during execution

---------------------------------------------------------------------------
q5 dynamic binding and static binding
- in dynamic binding , the nature of the value lets say int can be change into other
- ex: a = 'vinayak'
	a = 5

- whereas in static binding , the nature of the value will remain same , or binded to the original
- int a = 5;
- float a = 5.5; it is wrong , as it is static binding
------------------------------------------------------------------------

q6 keywords
- reserved words in programming language
- cant be used for variable names
- as these are the words that are reserved by compiler for converting high level code to machinery code

-------------------------------------------------------------------------

q6 identifier
- any name we give in the program is the identifier
- ex function name , class name , objname

-------------------------------------------------------------------------
q7 type conversion
- implicit : automatically typed conversion.
- ex: 5 + 5.6 = 10.6
- explicit : conversion done forcefully by the programmers
- ex int('4') , str(5 + 6j)

-------------------------------------------------------------------------
q8 literals 

the values inside variables are literals

-------------------------------------------------------------------------

q9 operators:
- operations that are performed on operands
------------------------------------------------------------------------
q10 modules?

file with py extension and contains python code is module
diff modules ex
- math , random , keywords , datetime
-----------------------------------------------------------------------

q11 loops 
- used to do repitive work . example displaying product in the website.
- write loop for displaying multiple products rather than writing code for each product

-----------------------------------------------------------------------
q12 Strings?

- strings are the sequence of unicode characters
- various strings functions
- capitalize , title , upper , lower , swapcase ,split 

----------------------------------------------------------------------

q13 datatypes in python 
- Numeric : integer , float , complex
- Sequence : list , tuples , range , strings
- mapping : dictionary 
- set : set and frozenset
- callable : user-defined functions , instance , generator functions
- None type

---------------------------------------------------------------------
q14 functions
- functions are block of code , which can be called when it is required.

---------------------------------------------------------------
q15 OOPS

In Python, object-oriented Programming (OOPs) is a programming paradigm that uses objects and classes in programming. It aims to implement real-world entities like inheritance, polymorphisms, encapsulation, etc. in the programming.

- class
- objects
- polymorphism
- encapculation
- inheritance
- data abstraction

----------------------------------------------------------------------------------------------------------------------------------------

q17 magic methods/dunder methods/double underscore methods
- these are the special methods
- diff methods have diff powers
- ex: constructor '__init__' is a function which ets automatically called when obj is made
- other magic methods: __str__ ,  __add__ , __substract__ etc

----------------------------------------------------------------------------------------------------------------------------------------

q18 Interpreted language

- the code gets executed line by line 
- lang: python , javascropt , R , PHP

----------------------------------------------------------------------------------------------------------------------------------------

q19 PEP 8 
- Python Enhancement Proposal
- documents/ guideline on how to write code in python efficiently
- to contributing in python open source one need to require the gudieline

----------------------------------------------------------------------------------------------------------------------------------------

q20 is operator?

- 'is' is an identity operator
- which checks whether 2 objects are located at same part of memory
- if 2 var values are equal it doesnt mean they are identical , one must check if they are pointing to same location

----------------------------------------------------------------------------------------------------------------------------------------

q21 Disadvantages of python?

- slow at runtime: because code executed line by line
- mobile application development: not very good
- difficulty in using other languages
- high memory consumption: due to the flexibility of the data types
- Not used in Enterprise Development Sector: highly insecure , Pythonâ€™s database access layer is a bit underdeveloped

----------------------------------------------------------------------------------------------------------------------------------------

q22 Zen of python

- Zen of Python is a collection of 19 "guiding principles" for writing computer programs that influence the design of the Python programming language

- ex: beautiful is better than ugly

----------------------------------------------------------------------------------------------------------------------------------------

q23 '_' variable?
- 'I dont care' or throwaway variable in python
- usecase: ignore value while unpacking

----------------------------------------------------------------------------------------------------------------------------------------

q23 module vs packages vs library

- module: file that contains python code
- packages: collection of related modules
- library: umbrella term meaning " a bundle of code"
- ex: matplotlib a plotting library

----------------------------------------------------------------------------------------------------------------------------------------

q24 Aliasing

- assigning different name to same object in memory
- change in one variable lead to change in others
- ex a = 5
- b = a
- both are pting to same locations
- benefits - memory save

----------------------------------------------------------------------------------------------------------------------------

q25 garbage collection?

- program
- when all the reference are deleted , then the value is just wasting memory , garbage collection will remove it.

----------------------------------------------------------------------------------------------------------------------------

q26 mutabilty and immutablity
- mutability : value/property can be changes
- immutability : cant be changedd
- if talk about memory level , mutablebjects value can be modified , the change are done at same memory , without creating another object
- however immutable doesnt allow to change the oject properties , instead it will create another object with the modification .

----------------------------------------------------------------------------------------------------------------------------------------

q28 what is file handling?

- file handling refers to the process of working with files
- includes opening , reading , writing , closing the files


q29 Types of files

- there are two type of files
a) Text : sequence of unicode char
b) Binary : sequence of Bytes
----------------------------------------------------------------------------------------------------------------------------------------

q30 Functions for writing to a file

a) F.write 
b) F.writelines: for multiple lines at once

