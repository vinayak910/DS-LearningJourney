q1 -  backup of data

ans- CREATE TABLE laptops_backup LIKE laptops;

      INSERT INTO laptops_backup
      SELECT * FROM laptops;
---------------------------------------------------------
q2 = Check Memory consumption

SELECT DATA_LENGTH/1024 FROM information_schema.TABLES
WHERE TABLE_SCHEMA = 'sql_cx_live'
AND TABLE_NAME = 'laptops';

---------------------------------------------------
q3 Drop Non important columns
ALTER TABLE laptops DROP COLUMN `Unnamed: 0`;
---------------------------------------------------

q4 drop rows that contains null values

-- Step 1: Create a temporary table to store index values

CREATE TEMPORARY TABLE temp_index AS
SELECT `index`
FROM laptops
WHERE Company IS NULL 
  AND TypeName IS NULL 
  AND Inches IS NULL 
  AND ScreenResolution IS NULL 
  AND Cpu IS NULL 
  AND RAM IS NULL 
  AND Memory IS NULL 
  AND Gpu IS NULL 
  AND OpSys IS NULL 
  AND Weight IS NULL 
  AND PRICE IS NULL;

-- Step 2: Use the temporary table to delete rows from the original table

DELETE FROM laptops
WHERE `index` IN (SELECT `index` FROM temp_index);

-- Step 3: Drop the temporary table (optional)
DROP TEMPORARY TABLE IF EXISTS temp_index;


-------------------------------------------------

q5 Drop Duplicates

DELETE FROM zomato
WHERE id NOT IN (SELECT MIN(ID)
FROM zomato
GROUP BY name,gender,age);

-------------------------------------------------
q6 Changing dtype to decimal of inches column

ALTER TABLE laptops MODIFY COLUMN inches DECIMAL(10,1)

-------------------------------------------------

Q6 removing gb from laptop ram column

UPDATE laptops l1
SET Ram = (
	SELECT REPLACE(Ram , 'GB' , '') FROM (SELECT * FROM laptops) l2
	WHERE l1.index = l2.index
);

2ND Method

WITH ram_update AS 
(SELECT `index` ,  REPLACE(Ram , 'GB' , '') AS ram2 FROM laptops)

UPDATE laptops t1
SET Ram = (SELECT ram2 FROM ram_update t2
WHERE t1.index = t2.index)
---------------------------------------------------

q7 Rounding off Price column value

UPDATE laptops l1
SET Price = (
	SELECT ROUND(Price) FROM (SELECT * FROM  laptops ) l2
	WHERE l1.index = l2.index
)
-----------------------------------------------------

q8 Changing price dtype to integer

ALTER TABLE laptops MODIFY COLUMN Price INTEGER;

-----------------------------------------------------

Q10 make a new col name os , that will contains 3 categories
-- mac
-- windows
-- linux
-- no os
-- Android chrom (others)

SELECT OpSys,
CASE 
	WHEN OpSys LIKE '%mac%' THEN 'macos'
	WHEN OpSys LIKE 'windows%' THEN 'windows'
	WHEN OpSys LIKE '%linux%' THEN 'linux'
	WHEN OpSys = 'No OS' THEN 'N/A'
	ELSE 'other'
END AS 'os_brand'
FROM laptops;

---------------------------------------------------------

q10 Updating OpSys values

UPDATE laptops
SET OpSys = 
CASE 
	WHEN OpSys LIKE '%mac%' THEN 'macos'
	WHEN OpSys LIKE 'windows%' THEN 'windows'
	WHEN OpSys LIKE '%linux%' THEN 'linux'
	WHEN OpSys = 'No OS' THEN 'N/A'
	ELSE 'other'
END;

-----------------------------------------------------------
q11 Make new columns GPU brand and GPU name

ALTER TABLE laptops
ADD COLUMN gpu_brand VARCHAR(255) AFTER Gpu , 
ADD COLUMN gpu_name VARCHAR(255) AFTER gpu_brand;

----------------------------------------------------------

q11 Extracting GPU brand from Gpu column

SELECT SUBSTRING_INDEX(gpu , ' ' , 1) FROM laptops;

(//kind of splitting at space and accessing first item)

UPDATE laptops L1
SET gpu_brand = (
		SELECT SUBSTRING_INDEX(gpu , ' ' , 1) FROM (SELECT * FROM laptops) L2
		WHERE L1.index = L2.index
)

--------------------------------------------------------------

q12 Extracting GPU name

SELECT REPLACE(Gpu , gpu_brand , '') FROM laptops;


UPDATE laptops L1
SET gpu_name = (
		SELECT REPLACE(Gpu , gpu_brand , '') FROM (SELECT * FROM laptops) L2
		WHERE L1.index = L2.index
);

-----------------------------------------------------------------

q13 Create 3 columns cpu_brand , cpu_name , cpu_speed

ALTER TABLE laptops
ADD COLUMN cpu_brand VARCHAR(255) AFTER Cpu , 
ADD COLUMN cpu_name VARCHAR(255) AFTER cpu_brand;
ADD COLUMN cpu_speed DECIMAL(10 , 1) AFTER cpu_name;

----------------------------------------------------------------

q14 fetching cpu_brand info from Cpu col

SELECT SUBSTRING_INDEX(Cpu , ' ' , 1) FROM laptops;

UPDATE laptops L1
SET cpu_brand = (
		SELECT SUBSTRING_INDEX(Cpu , ' ' , 1) FROM (SELECT * FROM laptops)L2
		WHERE L1.index = L2.index
);
 
----------------------------------------------------------------

q15 Fetching cpu_speed info

SELECT CAST(REPLACE(SUBSTRING_INDEX(Cpu , ' ' , -1),'GHz', '') AS DECIMAL(10,2)) FROM laptops;


UPDATE laptops L1
SET cpu_speed = (
	SELECT CAST(REPLACE(SUBSTRING_INDEX(Cpu , ' ' , -1),'GHz','') AS
	DECIMAL(10 ,1 ))
	FROM (SELECT * FROM laptops) L2
	WHERE L1.index = L2.index
)


-------------------------------------------------------------------

Q16 fetching cpu_name

UPDATE laptops l1
SET cpu_name = (SELECT
					REPLACE(REPLACE(Cpu,cpu_brand,''),SUBSTRING_INDEX(REPLACE(Cpu,cpu_brand,''),' ',-1),'')
					FROM (SELECT * FROM laptops) l2 
					WHERE l2.index = l1.index);

------------------------------------------------------------------
q17 Fetching resoution_width and resolution_height from resolution col

-- Adding columna
ALTER TABLE laptops
ADD COLUMN resolution_width INTEGER AFTER ScreenResolution,
ADD COLUMN resolution_height INTEGER AFTER resolution_width;

-- fetching values and putting inside columns
UPDATE laptops t1
SET 
resolution_width = ( SELECT 
SUBSTRING_INDEX(SUBSTRING_INDEX(ScreenResolution , ' ', -1),'x' ,1)
FROM (SELECT * FROM laptops) t2
WHERE t1.index = t2.index
),
resolution_height = ( SELECT 
SUBSTRING_INDEX(SUBSTRING_INDEX(ScreenResolution , ' ', -1),'x' ,-1)
FROM (SELECT * FROM laptops) t3
WHERE t1.index = t3.index
);
